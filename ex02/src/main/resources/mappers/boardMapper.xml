<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.test.mapper.BoardMapper"><!-- 패키지 포함 인터페이스명 -->
	<select id="getList" resultType="com.spring.test.domain.BoardVO">
		<![CDATA[
			select*from board where id > 0
		]]>
	</select>
	<insert id="insert">
		insert into board
		(attachments, id,title,writer,content,attachments,price,likes,views,create_time,size220,size230,size240,size250,size260,size270,size280,size290)
		values
		(#{uploadPath},select *from (select max(id)+1 from board) next), <!--nextval오라클 시퀀스여서 
			mysql식으로 autoincrease sql작업해줘야됨 -->
		#{title},#{writer},#{content},#{attachments},#{price},#{likes},#{views},now(),#{size220},#{size230},#{size240},#{size250},#{size260},#{size270},#{size280},#{size290})
	</insert>


	<insert id="insertSelectKey">
		<selectKey keyProperty="id" order="BEFORE" resultType="long">
			select MAX(id)+1 from board <!-- sql문을 바뀌줘야됨 -->
		</selectKey>
		insert into
		board(id,title,writer,content,attachments,price,likes,views,create_time,size220,size230,size240,size250,size260,size270,size280,size290)
		values
		(#{id},#{title},#{writer},#{content},#{attachments},#{price},#{likes},#{views},now(),#{size220},#{size230},#{size240},#{size250},#{size260},#{size270},#{size280},#{size290})
	</insert>

	<select id="read" resultType="com.spring.test.domain.BoardVO">
		select * from board 
		where 
		id = #{id}
	</select>

	<delete id="delete">
	
		delete from board where id = #{id}<!-- 오라클과 다른점은 mysql은 from 테이블명 오라클은 
			from 안써두댐 -->
	</delete>
	
	<update id="updateReplyCnt">
		update board set replycnt = replycnt + #{amount} where id = #{id}
	</update>

	<update id="update">
		update board
		set title = #{title},
		content = #{content},
		attachments =
		#{attachments},
		price = #{price},
		likes = #{likes},
		views = #{views},
		update_time = now(), <!-- -->
		size220 = #{size220},
		size230 = #{size230},
		size240 = #{size240},
		size250 = #{size250},
		size260 = #{size260},
		size270 = #{size270},
		size280 = #{size280},
		size290 = #{size290}
		where id = #{id}
	</update>
	<!-- ROW_NUMBER() OVER ( [ PARTITION BY partition_expression ] [ ORDER BY 
		order_list ] ) -->

	<!-- <select id="getListWithPaging" resultType="com.spring.test.domain.BoardVO"> 
		<![CDATA[ select id, title, content, attachments, price , likes, views, create_time 
		from board where id > 0 ORDER BY ID ASC LIMIT #{pageStart}, #{amount}; ]]> 
		</select> -->
	<select id="getListWithPaging"
		resultType="com.spring.test.domain.BoardVO">
	<![CDATA[
		select id, title, content, attachments, price , likes, views, create_time , update_time ,replycnt
		from board
		where id > 0
		]]>
			<include refid="search"/>
		<![CDATA[
		ORDER BY ID ASC
		LIMIT #{pageStart}, #{amount};
	]]>
		
	</select>
	<sql id="search">
		<if test="type != null">
			<if test="type == 'T'.toString()">
				and title like concat('%', #{keyword}, '%')
			</if>
			<if test="type == 'C'.toString()">
				and price like concat('%', #{keyword}, '%')
			</if>
			<if test="type == 'W'.toString()">
				and likes like concat('%', #{keyword}, '%')
			</if>			
		</if>
	<!--  
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like CONCAT('%', #{keyword} ,'%')
						</when>
						<when test="type == 'C'.toString">
							price like CONCAT('%', #{keyword} ,'%')
						</when>
						<when test="type == 'W'.toString()">
							likes like CONCAT('%', #{keyword} ,'%')--> <!--'%'|| #{keyword} ||'%'-->
				<!--  		</when>
					</choose>
				</trim>
			</foreach>
		</trim>
		-->
		</sql>
		
		
		<select id="getTotalCount" resultType="int">
			select count(*) from board 
			where
			id>0
			<include refid="search" />
		</select>

</mapper>